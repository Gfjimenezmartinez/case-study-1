clc
clear all
close all

% Case Study 1 - Demo

% load noisy audio data, then play recording
[xv,xvfs] = audioread('Blue in Green with Siren.wav');  
xv=xv(:,1);
% no of points in the data
length_y=length(xv);

%230 hertz low pass circuit
R=692;
C=1e-6;
tau= R*C;
fs= 44100; %frequency (standard audio sampling rate)
ts=0:1/fs:15*tau; %time sample frequency(given:15*tau)
delta_t=1/fs; %given deltaT=1/fs

Signal_in=xv;

%low pass 
a1=[1 -(1-delta_t/tau)];% coefficients of Vin terms low pass*
b1=[delta_t/tau];%coefficients of Vout terms; low pass
Low_pass=filter(b1, a1, Signal_in);

%60 hertz low pass circuit
R=2652.58;
C=1e-6;
tau= R*C;
%2nd low pass
Low_pass2=filter(b1, a1, Signal_in);


%910 hertz

R= 174.8955;
C=1e-6;
tau= R*C;

Signal_in=xv;

fs= 44100;%frequency (standard audio sampling rate)
ts=0:1/fs:15*tau; %time sample frequency(given:15*tau)
delta_t=1/fs; %given deltaT=1/fs

%high pass 
a2=[1 -(1-delta_t/tau)];% coefficients of Vin terms High  pass
b2=[1 -1];%coefficients of Vout terms; High pass
High_pass = filter(b2, a2,Signal_in); % Simulate system

%230 hertz
R= 691.9780;
C=1e-6;
tau= R*C;

%low pass 
a1=[1 -(1-delta_t/tau)];% coefficients of Vin terms low pass*
b1=[delta_t/tau];%coefficients of Vout terms; low pass
Bandpass1=filter(b1, a1, High_pass);

%2nd bandpass
%3000 hertz
R=53.0516;
C=1e-6;
tau= R*C;

%high pass 
a2=[1 -(1-delta_t/tau)];% coefficients of Vin terms High  pass
b2=[1 -1];%coefficients of Vout terms; High pass
High_pass2 = filter(b2, a2,Signal_in); % Simulate system

%910 hertz

R= 174.8955;
C=1e-6;
tau= R*C;

%low pass 
a1=[1 -(1-delta_t/tau)];% coefficients of Vin terms low pass*
b1=[delta_t/tau];%coefficients of Vout terms; low pass
Bandpass2=filter(b1, a1, High_pass2);



%3000 hertz high pass circuit
R=53;
C=1e-6;
tau= R*C;

%high pass 
a2=[1 -(1-delta_t/tau)];% coefficients of Vin terms High  pass
b2=[1 -1];%coefficients of Vout terms; High pass
High_pass = filter(b2, a2,Signal_in); % Simulate system

%14000 hertz high pass circuit
R=11.4;
C=1e-6;
tau= R*C;

%high pass 
a2=[1 -(1-delta_t/tau)];% coefficients of Vin terms High  pass
b2=[1 -1];%coefficients of Vout terms; High pass
High_pass2 = filter(b2, a2,Signal_in); % Simulate system


%% 
w=([1:length_y]'-1)/length_y*xvfs;w=w(1:length_y/2);%in Hz, single-sided spectrum
fy=abs(fft(xv));fy=fy(1:length_y/2)/xvfs;% FFT of original signal
%for vector to have the same legnth
L=500:499+length_y;
% cutoff freq =
z2=conv(Low_pass,xv);z2=z2(L);%230 hertz cut-off
z1=conv(Low_pass2,xv);z1=z1(L);%60 hertz low pass circuit
z3=conv(Bandpass1,xv);z3=z3(L);% 230-910hertz cut off
z4=conv(Bandpass2,xv);z4=z4(L);%910-3000 hertz cut off
z5=conv(High_pass,xv);z5=z5(L);%3000 hertz cut off
z6=conv(High_pass2,xv);z6=z6(L);%14000 hertz cut off
%
%10000 100 100 1
done=0;
coef=input('enter equalization coefficients [low, mid-low, mid-hi, hi]:');
if isempty(coef),coef=[.00001 .0001 .001 .01 .1 1];end

yx=[z1 z2 z3 z4 z5 z6]*coef';
fx=abs(fft(yx));fx=fx(1:length_y/2)/xvfs;


%% show time-domain waveform

length_y=length(xv);
f=([1:length_y]'-1)/length_y*xvfs;f=f(1:length_y/2);%in Hz, single-sided spectrum
% f = [0:length(yx)-1]*xvfs/length(yx);
fy=abs(fft(xv));
fy=fy(1:length_y/2)/xvfs;
fx=abs(fft(yx));
fx=fx(1:length_y/2)/xvfs;
figure
loglog(f, fy, f,fx,'--');
legend('orignal','equalized signal')
xlabel('f (Hz)');ylabel('|Y(f)|');

